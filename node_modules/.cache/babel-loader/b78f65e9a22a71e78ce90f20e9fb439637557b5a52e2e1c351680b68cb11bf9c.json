{"ast":null,"code":"var _jsxFileName = \"D:\\\\duckBilled\\\\duckbilled_test\\\\src\\\\contexts\\\\WalletContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletContext = /*#__PURE__*/createContext();\nexport const WalletProvider = ({\n  children\n}) => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n      const ethersProvider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(ethersProvider);\n    } else {\n      alert(\"Please install MetaMask to use this feature!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: {\n      provider,\n      connectWallet\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletProvider, \"xtTuOAY8k/s2BV2pXmjZ667ORoM=\");\n_c = WalletProvider;\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"names":["React","createContext","useState","ethers","jsxDEV","_jsxDEV","WalletContext","WalletProvider","children","_s","provider","setProvider","connectWallet","window","ethereum","enable","ethersProvider","providers","Web3Provider","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/duckBilled/duckbilled_test/src/contexts/WalletContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport const WalletContext = createContext();\r\n\r\nexport const WalletProvider = ({ children }) => {\r\n  const [provider, setProvider] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      await window.ethereum.enable();\r\n      const ethersProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n      setProvider(ethersProvider);\r\n    } else {\r\n      alert(\"Please install MetaMask to use this feature!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider value={{ provider, connectWallet }}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC9B,MAAMC,cAAc,GAAG,IAAIb,MAAM,CAACc,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;MACzEH,WAAW,CAACK,cAAc,CAAC;IAC7B,CAAC,MAAM;MACLG,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,aAAa,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAEE;IAAc,CAAE;IAAAJ,QAAA,EACxDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAChB,EAAA,CAlBWF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}