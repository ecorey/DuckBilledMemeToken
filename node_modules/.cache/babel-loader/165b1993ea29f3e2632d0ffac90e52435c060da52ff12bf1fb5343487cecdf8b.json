{"ast":null,"code":"var _jsxFileName = \"D:\\\\duckBilled\\\\duckbilled_test\\\\src\\\\contexts\\\\WalletContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletContext = /*#__PURE__*/createContext();\nexport const WalletProvider = ({\n  children\n}) => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const providerTemp = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(providerTemp);\n        setIsConnected(true);\n        return true;\n      } catch (error) {\n        console.error(\"User refused to connect their wallet\");\n        setIsConnected(false);\n        return false;\n      }\n    } else {\n      console.log(\"Please install MetaMask!\");\n      setIsConnected(false);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: {\n      isConnected,\n      connectWallet\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletProvider, \"2o10SZgtmJLFPG0875okkyVT0e0=\");\n_c = WalletProvider;\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"names":["React","createContext","useState","ethers","jsxDEV","_jsxDEV","WalletContext","WalletProvider","children","_s","provider","setProvider","isConnected","setIsConnected","connectWallet","window","ethereum","request","method","providerTemp","providers","Web3Provider","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/duckBilled/duckbilled_test/src/contexts/WalletContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport const WalletContext = createContext();\r\n\r\nexport const WalletProvider = ({ children }) => {\r\n  const [provider, setProvider] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const providerTemp = new ethers.providers.Web3Provider(window.ethereum);\r\n        setProvider(providerTemp);\r\n        setIsConnected(true);\r\n        return true;\r\n      } catch (error) {\r\n        console.error(\"User refused to connect their wallet\");\r\n        setIsConnected(false);\r\n        return false;\r\n      }\r\n    } else {\r\n      console.log(\"Please install MetaMask!\");\r\n      setIsConnected(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider value={{ isConnected, connectWallet }}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QAChE,MAAMC,YAAY,GAAG,IAAIhB,MAAM,CAACiB,SAAS,CAACC,YAAY,CAACN,MAAM,CAACC,QAAQ,CAAC;QACvEL,WAAW,CAACQ,YAAY,CAAC;QACzBN,cAAc,CAAC,IAAI,CAAC;QACpB,OAAO,IAAI;MACb,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;QACrDT,cAAc,CAAC,KAAK,CAAC;QACrB,OAAO,KAAK;MACd;IACF,CAAC,MAAM;MACLU,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCX,cAAc,CAAC,KAAK,CAAC;MACrB,OAAO,KAAK;IACd;EACF,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEd,WAAW;MAAEE;IAAc,CAAE;IAAAN,QAAA,EAC3DA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACrB,EAAA,CA7BWF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}