{"ast":null,"code":"const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      if (accounts.length > 0) {\n        setProvider(new ethers.providers.Web3Provider(window.ethereum));\n        setIsConnected(true);\n      } else {\n        console.error(\"No accounts found\");\n        setIsConnected(false);\n      }\n    } catch (error) {\n      console.error(\"User refused to connect their wallet\", error);\n      setIsConnected(false);\n    }\n  } else {\n    console.log(\"Please install MetaMask!\");\n    setIsConnected(false);\n  }\n};","map":{"version":3,"names":["connectWallet","window","ethereum","accounts","request","method","length","setProvider","ethers","providers","Web3Provider","setIsConnected","console","error","log"],"sources":["D:/duckBilled/duckbilled_test/src/contexts/WalletContext.js"],"sourcesContent":["const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      if (accounts.length > 0) {\r\n        setProvider(new ethers.providers.Web3Provider(window.ethereum));\r\n        setIsConnected(true);\r\n      } else {\r\n        console.error(\"No accounts found\");\r\n        setIsConnected(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"User refused to connect their wallet\", error);\r\n      setIsConnected(false);\r\n    }\r\n  } else {\r\n    console.log(\"Please install MetaMask!\");\r\n    setIsConnected(false);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAC7CC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;QACvBC,WAAW,CAAC,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACT,MAAM,CAACC,QAAQ,CAAC,CAAC;QAC/DS,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QAClCF,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DF,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,MAAM;IACLC,OAAO,CAACE,GAAG,CAAC,0BAA0B,CAAC;IACvCH,cAAc,CAAC,KAAK,CAAC;EACvB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}