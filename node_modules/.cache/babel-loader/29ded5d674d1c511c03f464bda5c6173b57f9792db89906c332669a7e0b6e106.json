{"ast":null,"code":"var _jsxFileName = \"D:\\\\duckBilled\\\\duckbilled_test\\\\src\\\\components\\\\Stats.jsx\",\n  _s = $RefreshSig$();\nimport { ethers } from \"ethers\";\nimport React, { useState } from \"react\";\nimport { contractAddress, contractABI } from \"./contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Info = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [tokenQuantity, setTokenQuantity] = useState(\"\"); // This state is added to manage token quantity input.\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n      setProvider(new ethers.providers.Web3Provider(window.ethereum));\n    } else {\n      alert(\"Please install MetaMask to use this feature!\");\n    }\n  };\n  const buyTokens = async () => {\n    if (!provider) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    // Set desired Ether amount\n    const amountInWei = ethers.utils.parseEther(tokenQuantity); // use tokenQuantity as amount to parse to Ether\n\n    try {\n      const tx = await contract.buyTokens({\n        value: amountInWei\n      });\n      await tx.wait();\n      alert(\"Transaction successful!\");\n    } catch (error) {\n      console.error(\"An error occurred\", error);\n    }\n  };\n\n  // This is the handler for the text input field to update tokenQuantity state.\n  const handleTokenQuantityChange = event => {\n    setTokenQuantity(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statsBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center pt-8 space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tokenQuantity,\n        onChange: handleTokenQuantityChange,\n        className: \"px-4 py-2.5 bg-blue-600 font-medium\\r text-sm leading-tight uppercase rounded-full\\r shadow-md shadow-gray-400 hover:bg-blue-700\\r hover:shadow-lg focus:outline-none\\r active:bg-blue-800 dark:shadow-transparent\\r transition duration-150 ease-in-out dark:text-blue-500\\r dark:border dark:border-blue-500 dark:bg-transparent\\r text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2.5 bg-blue-600 font-medium\\r text-sm leading-tight uppercase rounded-full\\r shadow-md shadow-gray-400 hover:bg-blue-700\\r hover:shadow-lg focus:outline-none\\r active:bg-blue-800 dark:shadow-transparent\\r transition duration-150 ease-in-out dark:text-blue-500\\r dark:border dark:border-blue-500 dark:bg-transparent\\r text-white\",\n        onClick: buyTokens,\n        children: \"Buy Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Info, \"e8jM/P8g5Ty0zRJVxqOo8gZAlgI=\");\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["ethers","React","useState","contractAddress","contractABI","jsxDEV","_jsxDEV","Info","_s","provider","setProvider","tokenQuantity","setTokenQuantity","connectWallet","window","ethereum","enable","providers","Web3Provider","alert","buyTokens","signer","getSigner","contract","Contract","amountInWei","utils","parseEther","tx","value","wait","error","console","handleTokenQuantityChange","event","target","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/duckBilled/duckbilled_test/src/components/Stats.jsx"],"sourcesContent":["import { ethers } from \"ethers\";\r\nimport React, { useState } from \"react\";\r\nimport { contractAddress, contractABI } from \"./contract\";\r\n\r\nconst Info = () => {\r\n  const [provider, setProvider] = useState(null);\r\n  const [tokenQuantity, setTokenQuantity] = useState(\"\"); // This state is added to manage token quantity input.\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      await window.ethereum.enable();\r\n      setProvider(new ethers.providers.Web3Provider(window.ethereum));\r\n    } else {\r\n      alert(\"Please install MetaMask to use this feature!\");\r\n    }\r\n  };\r\n\r\n  const buyTokens = async () => {\r\n    if (!provider) {\r\n      alert(\"Please connect your wallet first!\");\r\n      return;\r\n    }\r\n\r\n    const signer = provider.getSigner();\r\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n    // Set desired Ether amount\r\n    const amountInWei = ethers.utils.parseEther(tokenQuantity); // use tokenQuantity as amount to parse to Ether\r\n\r\n    try {\r\n      const tx = await contract.buyTokens({ value: amountInWei });\r\n      await tx.wait();\r\n      alert(\"Transaction successful!\");\r\n    } catch (error) {\r\n      console.error(\"An error occurred\", error);\r\n    }\r\n  };\r\n\r\n  // This is the handler for the text input field to update tokenQuantity state.\r\n  const handleTokenQuantityChange = (event) => {\r\n    setTokenQuantity(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"statsBox\">\r\n      {/* Rest of your JSX code */}\r\n\r\n      <div className=\"flex justify-center items-center pt-8 space-x-4\">\r\n        {/* This is the text input field where user can input token quantity */}\r\n        <input\r\n          type=\"text\"\r\n          value={tokenQuantity}\r\n          onChange={handleTokenQuantityChange}\r\n          className=\"px-4 py-2.5 bg-blue-600 font-medium\r\n                                text-sm leading-tight uppercase rounded-full\r\n                                shadow-md shadow-gray-400 hover:bg-blue-700\r\n                                hover:shadow-lg focus:outline-none\r\n                                active:bg-blue-800 dark:shadow-transparent\r\n                                transition duration-150 ease-in-out dark:text-blue-500\r\n                                dark:border dark:border-blue-500 dark:bg-transparent\r\n                                text-white\"\r\n        />\r\n\r\n        <button\r\n          className=\"px-4 py-2.5 bg-blue-600 font-medium\r\n                                text-sm leading-tight uppercase rounded-full\r\n                                shadow-md shadow-gray-400 hover:bg-blue-700\r\n                                hover:shadow-lg focus:outline-none\r\n                                active:bg-blue-800 dark:shadow-transparent\r\n                                transition duration-150 ease-in-out dark:text-blue-500\r\n                                dark:border dark:border-blue-500 dark:bg-transparent\r\n                                text-white\"\r\n          onClick={buyTokens}\r\n        >\r\n          Buy Tokens\r\n        </button>\r\n        {/* Rest of your JSX code */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC9BN,WAAW,CAAC,IAAIV,MAAM,CAACiB,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC,CAAC;IACjE,CAAC,MAAM;MACLI,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACX,QAAQ,EAAE;MACbU,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IAEA,MAAME,MAAM,GAAGZ,QAAQ,CAACa,SAAS,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,QAAQ,CAACrB,eAAe,EAAEC,WAAW,EAAEiB,MAAM,CAAC;;IAE1E;IACA,MAAMI,WAAW,GAAGzB,MAAM,CAAC0B,KAAK,CAACC,UAAU,CAAChB,aAAa,CAAC,CAAC,CAAC;;IAE5D,IAAI;MACF,MAAMiB,EAAE,GAAG,MAAML,QAAQ,CAACH,SAAS,CAAC;QAAES,KAAK,EAAEJ;MAAY,CAAC,CAAC;MAC3D,MAAMG,EAAE,CAACE,IAAI,CAAC,CAAC;MACfX,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAME,yBAAyB,GAAIC,KAAK,IAAK;IAC3CtB,gBAAgB,CAACsB,KAAK,CAACC,MAAM,CAACN,KAAK,CAAC;EACtC,CAAC;EAED,oBACEvB,OAAA;IAAK8B,SAAS,EAAC,UAAU;IAAAC,QAAA,eAGvB/B,OAAA;MAAK8B,SAAS,EAAC,iDAAiD;MAAAC,QAAA,gBAE9D/B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXT,KAAK,EAAElB,aAAc;QACrB4B,QAAQ,EAAEN,yBAA0B;QACpCG,SAAS,EAAC;MAOuB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eAEFrC,OAAA;QACE8B,SAAS,EAAC,iVAOuB;QACjCQ,OAAO,EAAExB,SAAU;QAAAiB,QAAA,EACpB;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CA5EID,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AA8EV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}